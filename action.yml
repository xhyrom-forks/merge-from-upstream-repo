name: "Merge from upstream repo"
description: "Merge changes from an upstream repo you forked."
author: "discdiver"
branding:
  icon: git-merge
  color: black

inputs:
  upstream:
    description: "Upstream repository owner/name. For example, discdiver/merge-from-upstream-repo"
    required: true
  upstream-branch:
    description: "Upstream branch to merge from. For example, master"
    default: "main"
  branch:
    description: "Branch to merge to. For example, main"
    default: "main"
  useremail:
    description: "User email - required for git commits"
    type: string
    required: true
  username:
    description: "User name - required for git commits"
    type: string
    required: true
  commit-message:
    description: "Commit message"
    type: string
    default: "Merge from upstream repo"
  exclude:
    description: "Files to exclude"
    type: string
    default: ""
  exclude-add-back:
    description: "Files to add back (when using exclude)"
    type: string
    default: ""
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, follow the principle of least privlege to provide only the scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - if: ${{ inputs.exclude == '' }}
      run: |
        git remote add -f upstream "https://github.com/${{ inputs.upstream }}.git"
        git remote -v
        git config user.email "${{ inputs.useremail }}"
        git config user.name "${{ inputs.username }}"
        git checkout ${{ inputs.branch }}
        git merge --allow-unrelated-histories upstream/${{ inputs.upstream-branch }}
        git push
      shell: bash
    - if: ${{ inputs.exclude != '' && inputs.exclude-add-back == '' }}
      run: |
        git remote add -f upstream "https://github.com/${{ inputs.upstream }}.git"
        git remote -v
        git config user.email "${{ inputs.useremail }}"
        git config user.name "${{ inputs.username }}"
        git checkout ${{ inputs.branch }}
        git merge --allow-unrelated-histories --no-commit upstream/${{ inputs.upstream-branch }}
        git rm -r --cached ${{ join(inputs.exclude, ' ') }}
        git commit -m "${{ inputs.commit-message }}"
        git push
      shell: bash
    - if: ${{ inputs.exclude != '' && inputs.exclude-add-back != '' }}
      run: |
        git remote add -f upstream "https://github.com/${{ inputs.upstream }}.git"
        git remote -v
        git config user.email "${{ inputs.useremail }}"
        git config user.name "${{ inputs.username }}"
        git checkout ${{ inputs.branch }}
        git merge --allow-unrelated-histories --no-commit upstream/${{ inputs.upstream-branch }}
        git rm -r --cached ${{ join(inputs.exclude, ' ') }}
        git add ${{ join(inputs.exclude-add-back, ' ') }}
        git commit -m "${{ inputs.commit-message }}" || echo "Nothing to push"
        git push || echo "Nothing to push"
      shell: bash
